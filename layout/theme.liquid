<!doctype html>
{%- assign is_home = request.page_type == 'index' -%}
{%- assign is_pdp  = request.page_type == 'product' -%}
{%- assign is_cart = request.page_type == 'cart' -%}
{%- assign is_coll = request.page_type == 'collection' -%}


<html class="no-js" lang="{{ request.locale.iso_code }}">
 
<head>


  <!-- Google Tag Manager -->
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-KSF3JBV');</script>
  <!-- End Google Tag Manager -->

	<!-- Added by AVADA SEO Suite -->
	{% comment %} {% include 'avada-seo' %} {% endcomment %}

{% comment %} 
  {% unless is_home %}
  {% include 'avada-seo' %}
{% endunless %} {% endcomment %}

{% if is_home %}
  <script>
    // Run after first visible content (near LCP)
    new IntersectionObserver((entries, observer) => {
      if (entries[0].isIntersecting) {
        observer.disconnect();
        var script = document.createElement('script');
        script.src = "{{ 'avada-seo.js' | asset_url }}"; // Or your snippet output
        document.body.appendChild(script);
      }
    }).observe(document.querySelector('main')); // Trigger when main content is visible
  </script>
{% else %}
  {% include 'avada-seo' %}
{% endif %}


	<!-- /Added by AVADA SEO Suite -->
  
  <!-- Showcase 7.1.6 -->


  <!-- <style>
    body.template-index .shopify-section {
       
  background: linear-gradient(to bottom, #ffffff 0%, #F6F3FF 80%, #D4C7FF 100%);
}
  </style> -->
  {% render 'head-tag' %}

  {%- liquid
    assign base_font = settings.type_base_font
    assign heading_font = settings.type_heading_font
    assign nav_font = settings.type_nav_font
    assign logo_font = settings.type_logo_font
    assign base_font_extralight = base_font | font_modify: 'weight', '200'
    assign base_font_medium = base_font | font_modify: 'weight', '500'
    assign base_font_semibold = base_font | font_modify: 'weight', '600'
    assign base_font_bold = base_font | font_modify: 'weight', 'bolder'
    assign base_font_italic = base_font | font_modify: 'style', 'italic'
    assign base_font_bold_italic = base_font_bold | font_modify: 'style', 'italic'
  -%}

  <style>
    {{ base_font | font_face: font_display: 'swap' }}
    {{ base_font_extralight | font_face: font_display: 'swap' }}
    {{ base_font_medium | font_face: font_display: 'swap' }}
    {{ base_font_semibold | font_face: font_display: 'swap' }}
    {{ base_font_bold | font_face: font_display: 'swap' }}
    {{ base_font_italic | font_face: font_display: 'swap' }}
    {{ base_font_bold_italic | font_face: font_display: 'swap' }}
    {{ heading_font | font_face: font_display: 'swap' }}
    {{ nav_font | font_face: font_display: 'swap' }}
    {{ logo_font | font_face: font_display: 'swap' }}
  </style>

  <meta name="theme-color" content="{{ settings.col_btn_bg }}">
 <meta name="google-site-verification" content="XP41ma6olWL4aXlmRPjogGlQT_osjECtvjtkPxEbZMI" />
  <title>
    {{ page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}{% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
  </title>

  {% render 'social-meta-tags' %}

  {% style %}
    :root {
      --viewport-height: 100vh;
      --viewport-height-first-section: 100vh;
      --nav-height: 0;
    }
  {% endstyle %}

  {{ 'styles.css' | asset_url | stylesheet_tag: preload: true }}

  {% comment %} lazy load for third party app {% endcomment %}

  <script>
  // generic lazy loader
  function lazyLoadScript(src, attrs){
    var s = document.createElement('script');
    s.src = src;
    s.async = true;
    if (attrs) Object.keys(attrs).forEach(k => s.setAttribute(k, attrs[k]));
    if ('requestIdleCallback' in window) {
      requestIdleCallback(() => document.head.appendChild(s), {timeout:3000});
    } else {
      setTimeout(() => document.head.appendChild(s), 2000);
    }
  }
</script>

  {% comment %} end third party {% endcomment %}


  <script>
(function(){
  var RE = /cornerWidget\.css/i;

  // If it already exists (very early injection), grab & replace immediately.
  function replaceLink(link){
    if (!link || link.dataset._cwDone) return;
    link.dataset._cwDone = "1";

    var href = link.href;
    // Remove the blocking stylesheet before it can block further
    link.parentNode && link.parentNode.removeChild(link);

    // Re-add as non-blocking
    var pre = document.createElement('link');
    pre.rel = 'preload';
    pre.as  = 'style';
    pre.href = href;
    pre.onload = function(){
      this.onload = null;
      this.rel = 'stylesheet';
    };
    document.head.appendChild(pre);
  }

  // Replace any that already slipped in
  document.querySelectorAll('link[rel="stylesheet"]').forEach(function(l){
    if (RE.test(l.href)) replaceLink(l);
  });

  // Catch new ones as soon as theyâ€™re injected
  new MutationObserver(function(muts){
    for (var i=0;i<muts.length;i++){
      var ns = muts[i].addedNodes;
      for (var j=0;j<ns.length;j++){
        var n = ns[j];
        if (!n) continue;

        if (n.tagName === 'LINK' && /stylesheet/i.test(n.rel) && RE.test(n.href)) {
          replaceLink(n);
        } else if (n.querySelectorAll){
          n.querySelectorAll('link[rel="stylesheet"]').forEach(function(l){
            if (RE.test(l.href)) replaceLink(l);
          });
        }
      }
    }
  }).observe(document.head, { childList:true, subtree:true });
})();
</script>

<link rel="preconnect" href="https://cdn.shopify.com" crossorigin>


  {{ content_for_header }}

  {%- if request.design_mode -%}
    <script src="{{ 'store-info.v1.0.0.js' | asset_url }}" defer="defer" data-theme="Showcase" data-version="7.1.6" data-contact="{{ shop.email | escape }}"></script>
  {%- endif -%}

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    window.theme = window.theme || {};
    {% if settings.currency_code_enabled %}
      theme.money_format_with_code_preference = {{ shop.money_with_currency_format | json }};
    {% else %}
      theme.money_format_with_code_preference = {{ shop.money_format | json }};
    {% endif %}
    theme.money_format = {{ shop.money_format | json }};
    theme.money_container = '.theme-money';
    theme.strings = {
      previous: {{ 'general.accessibility_labels.previous' | t | json }},
      next: {{ 'general.accessibility_labels.next' | t | json }},
      close: {{ 'general.accessibility_labels.close' | t | json }},
      addressError: {{ 'map.errors.address_error' | t | json }},
      addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
      addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
      authError: {{ 'map.errors.auth_error' | t | json }},
      back: {{ 'layout.navigation.back' | t | json }},
      cartConfirmation: {{ 'cart.terms.confirmation' | t | json }},
      loadMore: {{ 'general.accessibility_labels.load_more' | t | json }},
      infiniteScrollNoMore: {{ 'collections.general.infinite_scroll_no_more' | t | json }},
      priceNonExistent: {{ 'products.variant.non_existent' | t | json }},
      buttonDefault: {{ 'products.product.add_to_cart' | t | json }},
      buttonPreorder: {{ 'products.product.preorder' | t | json }},
      buttonNoStock: {{ 'products.variant.out_of_stock' | t | json }},
      buttonNoVariant: {{ 'products.variant.non_existent' | t | json }},
      variantNoStock: {{ 'products.variant.no_stock' | t | json }},
      unitPriceSeparator: {{ 'products.product.unit_price_separator' | t | json }},
      colorBoxPrevious: {{ 'general.lightbox.previous' | t | json }},
      colorBoxNext: {{ 'general.lightbox.next' | t | json }},
      colorBoxClose: {{ 'general.lightbox.close' | t | json }},
      navigateHome: {{ 'layout.navigation.home' | t | json }},
      productAddingToCart: {{ 'products.product.adding_to_cart' | t | json }},
      productAddedToCart: {{ 'products.product.added_to_cart' | t | json }},
      popupWasAdded: {{ 'products.product.popup_was_added' | t | json }},
      popupCheckout: {{ 'products.product.popup_checkout' | t | json }},
      popupContinueShopping: {{ 'products.product.popup_continue_shopping' | t | json }},
      onlyXLeft: {{ 'products.labels.only_x_left' | t: quantity: '[[ quantity ]]' | json }},
      priceSoldOut: {{ 'products.labels.sold_out' | t | json }},
      inventoryLowStock: {{ 'products.labels.low_stock' | t | json }},
      inventoryInStock: {{ 'products.labels.in_stock' | t | json }},
      loading: {{ 'products.listing.loading' | t | json }},
      viewCart: {{ 'layout.cart_summary.cart' | t | json }},
      page: {{ 'general.meta.page' | t | json }},
      imageSlider: {{ 'general.slider.images' | t | json }},
      clearAll: {{ 'collections.filtering.clear_all' | t | json }}
    };
    theme.routes = {
      root_url: '{{ routes.root_url }}',
      cart_url: '{{ routes.cart_url }}',
      cart_add_url: '{{ routes.cart_add_url }}',
      cart_change_url: '{{ routes.cart_change_url }}',
      cart_update_url: '{{ routes.cart_update_url }}.js',
      checkout: '/checkout'
    };
    theme.settings = {
      animationEnabledDesktop: {{ settings.animation_enabled_desktop | json }},
      animationEnabledMobile: {{ settings.animation_enabled_mobile | json }}
    };

    theme.checkViewportFillers = function(){
      var toggleState = false;
      var elPageContent = document.getElementById('page-content');
      if(elPageContent) {
        var elOverlapSection = elPageContent.querySelector('.header-overlap-section');
        if (elOverlapSection) {
          var padding = parseInt(getComputedStyle(elPageContent).getPropertyValue('padding-top'));
          toggleState = ((Math.round(elOverlapSection.offsetTop) - padding) === 0);
        }
      }
      if(toggleState) {
        document.getElementsByTagName('body')[0].classList.add('header-section-overlap');
      } else {
        document.getElementsByTagName('body')[0].classList.remove('header-section-overlap');
      }
    };

    theme.assessAltLogo = function(){
      var elsOverlappers = document.querySelectorAll('.needs-alt-logo');
      var useAltLogo = false;
      if(elsOverlappers.length) {
        var elSiteControl = document.querySelector('#site-control');
        var elSiteControlInner = document.querySelector('#site-control .site-control__inner');
        var headerMid = elSiteControlInner.offsetTop + elSiteControl.offsetTop + elSiteControlInner.offsetHeight / 2;
        Array.prototype.forEach.call(elsOverlappers, function(el, i){
          var thisTop = el.getBoundingClientRect().top;
          var thisBottom = thisTop + el.offsetHeight;
          if(headerMid > thisTop && headerMid < thisBottom) {
            useAltLogo = true;
            return false;
          }
        });
      }
      if(useAltLogo) {
        document.getElementsByTagName('body')[0].classList.add('use-alt-logo');
      } else {
        document.getElementsByTagName('body')[0].classList.remove('use-alt-logo');
      }
    };
  </script>
    <!-- Gokwik theme code start -->
  <link rel="dns-prefetch" href="https://pdp.gokwik.co/">
  <link rel="dns-prefetch" href="https://api.gokwik.co">
    {% render 'gokwik' %}
 <!-- Gokwik theme code End -->

  {% if template contains 'product' %}
    <script type="application/ld+json">
    {
      "@context": "https://schema.org/",
      "@type": "Product",
      "name": "{{ product.title | escape }}",
      "image": "{{ product.featured_image | image_url: '800x800' }}",
      "description": "{{ product.description | strip_html | escape }}",
      "sku": "{{ product.variants.first.sku }}",
      "offers": {
        "@type": "Offer",
        "priceCurrency": "INR",
        {% if product.compare_at_price > product.price %}
        "price": "{{ product.price | money_without_currency | remove: ',' }}",
        "priceSpecification": {
          "@type": "UnitPriceSpecification",
          "priceCurrency": "INR",
          "price": "{{ product.compare_at_price | money_without_currency | remove: ',' }}"
        }

        {% else %}
        "price": "{{ product.price | money_without_currency | remove: ',' }}",
        {% endif %}
        "availability": "https://schema.org/InStock",
        "url": "{{ shop.url }}{{ product.url }}"
      }
    }
    </script>
  {% endif %}

</head>

<body class="page-{{ page_title | handle }} {% if customer %}customer-logged-in {% endif %}template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}{% if template.suffix != blank %} template-suffix-{{ template.suffix }}{% endif %}{% if template contains 'customers' %} template-customer-area{% endif %}{% if logo_html contains 'img' %} has-logo{% endif %} animation-speed-{{ settings.animation_speed }}"
      {% if settings.animation_speed == "fast" %}data-cc-animate-timeout="0"{% endif %}>
    <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KSF3JBV"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
  {% if settings.animation_enabled_mobile %}
 {% comment %} <script>
      if(window.innerWidth < 768 && window.localStorage.getItem('is_first_visit') !== null) {
        var pageFadedIn = false;
        document.body.style.opacity = 0;

        function fadeInPageMob(){
          if(!pageFadedIn) {
            document.body.classList.add("cc-animate-enabled");
            document.body.style.transition = 'opacity 0.{% if settings.animation_speed == "fast" %}2{% else %}4{% endif %}s';
            setTimeout(function () {
              document.body.style.opacity = 1;
            }, {% if settings.animation_speed == "fast" %}50{% else %}200{% endif %});
            pageFadedIn = true;
          }
        }

        window.addEventListener("load", fadeInPageMob);
        setTimeout(fadeInPageMob, 3000);
      }

      window.addEventListener("pageshow", function(){
        document.getElementById('cc-veil').classList.remove('-in');
      });
    </script> {% endcomment %}


    {% comment %} new optimize code {% endcomment %}

    <script>
/**
 * Mobile-safe, LCP-friendly reveal
 * - No pre-paint opacity=0
 * - Enables animations only after first paint
 * - Keeps your original condition (mobile + not first visit)
 * - Respects prefers-reduced-motion
 * - Removes veil on pageshow (as before)
 */
(function () {
  var isMobile = window.innerWidth < 768;
  var hasVisitedBefore = window.localStorage.getItem('is_first_visit') !== null;
  var reduceMotion = (window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches);

  // Mark first visit (so subsequent loads can animate if you want)
  if (!hasVisitedBefore) {
    try { window.localStorage.setItem('is_first_visit', '1'); } catch (e) {}
  }

  // Only enable the animation class on subsequent mobile visits,
  // but do it AFTER first paint so it doesn't delay FCP/LCP.
  if (isMobile && hasVisitedBefore && !reduceMotion) {
    // Ensure styles are applied, then schedule class add post-paint
    requestAnimationFrame(function () {
      // microtask/timeout ensures we come after style/calculation
      setTimeout(function () {
        document.body.classList.add("cc-animate-enabled");
        // Optionally, if your theme varies speed:
        // document.body.style.setProperty('--cc-anim-speed', '{{ settings.animation_speed == "fast" ? 0.2 : 0.4 }}s');
      }, 0);
    });
  }

  // Remove veil ASAP after page is shown (keeps your behavior)
  window.addEventListener("pageshow", function () {
    var veil = document.getElementById('cc-veil');
    if (veil) veil.classList.remove('-in');
  });
})();
</script>

{% comment %} End of new optimize {% endcomment %}

  {% endif %} 

  {% if settings.animation_enabled_desktop %}
    <script>
      if ('IntersectionObserver' in window) {
        document.body.classList.add("cc-animate-enabled");
      }

      window.addEventListener("pageshow", function(){
        document.getElementById('cc-veil').classList.remove('-in');
      });
    </script>
  {% endif %}

  <a class="skip-link visually-hidden" href="#page-content">{{ 'general.accessibility_labels.skip_to_content' | t }}</a>

  {% section 'header' %}

  <main id="page-content">
    {{ content_for_layout }}
    <aside class="faq-sidebar" id="faq-sidebar" data-cc-animate></aside>
  </main>

  <script>
    var firstSection = document.body.querySelector('#page-content .shopify-section:first-child');
    if(firstSection) {
      var firstBgSet = firstSection.querySelector('[data-bgset]');

      if (firstBgSet) {
        var bgSets = firstBgSet.dataset.bgset.split(',');
        if(bgSets) {
          for (var i = 0; i < bgSets.length; i++) {
            var widthMatch = bgSets[i].match(/ [0-9]+w/g);
            var heightMatch = bgSets[i].match(/ [0-9]+h/g);

            if(widthMatch && heightMatch) {
              var width = parseInt(widthMatch[0].replace('w', '').trim());
              var height = parseInt(heightMatch[0].replace('h', '').trim());

              if (width >= window.innerWidth && height >= window.innerHeight) {
                firstBgSet.style.backgroundImage = "url('" + bgSets[i].trim().split(' ')[0] + "')";
                firstBgSet.classList.remove('fade-in');
                break;
              }
            }
          }
        }
      } else if (firstSection.querySelector('[data-src]')) {
        var firstDataSrc = firstSection.querySelector('[data-src]');
        var widths = JSON.parse(firstDataSrc.dataset.widths);
        for (var i = 0; i < widths.length; i++) {
          var width = parseInt(widths[i]);
          if (width >= window.innerWidth) {
            firstDataSrc.setAttribute('src', firstDataSrc.dataset.src.replace('{width}', width));
            firstDataSrc.classList.remove('fade-in');
            break;
          }
        }
      }
    }
  </script>

  {% section 'popup' %}
  {% section 'footer' %}

  <!-- Search form -->
  <div id="search-modal" class="theme-modal theme-modal--fullscreen" tabindex="-1">
    <a href="#" data-modal-close class="modal-close">&times;</a>
    <div class="inner">
      <div class="container growth-area">
        <form action="{{ routes.search_url }}" method="get" class="search-form" role="search">
          {% comment %} Remove the following line to search everything, not just products {% endcomment %}
          <input type="hidden" name="type" value="{{ settings.search_type }}" />
          <input type="hidden" name="options[prefix]" value="last" />

          <div class="inline-mini-form inline-mini-form--arrow">
            <input type="text" name="q"
                  placeholder="{{ 'general.search.page_placeholder' | t }}"
                  class="focus-me"
                  value="{{ search.terms | escape }}"
                  aria-label="{{ 'general.search.input_label' | t | escape }}"
                  autocomplete="off" required />
            <button class="compact no-hover" type="submit" aria-label="{{ 'general.search.search_button' | t | escape }}"
            >{% render 'svg-rarrow-long' %}</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <div id="cc-veil" class="{% if settings.animation_loading %}cc-veil--animate{% endif %}">
    {% if settings.animation_loading %}
      <div class="cc-veil-loader cc-veil-loader--{{ settings.animation_loading_animation }}
        {% if settings.animation_loading_message != blank and settings.animation_loading_image != blank %}cc-veil-loader--image-text{% endif %}
        {% if settings.animation_loading_message == blank and settings.animation_loading_image == blank %}cc-veil-loader--blank{% endif %}">

        {% if settings.animation_loading_image != blank %}
          <img class="cc-veil-loader__image"
              src="{{ settings.animation_loading_image | img_url: '500x500' }}"
              alt="{{ settings.animation_loading_image.alt | escape }}"
              width="{{ settings.animation_loading_image.width }}"
              height="{{ settings.animation_loading_image.height }}">
        {% endif %}

        {% if settings.animation_loading_message != blank %}
          <p class="cc-veil-loader__message">
            {{ settings.animation_loading_message }}
          </p>
        {% endif %}
      </div>
    {% endif %}
  </div>

  <script>
    //Eliminate a bit of CLS
    document.documentElement.style.setProperty('--nav-height',
      document.getElementById('site-control').clientHeight + "px");

    //Calculate the viewport height
    theme.calc100vh = function() {
      var nav = document.getElementById('site-control');
      document.documentElement.style.setProperty('--viewport-height-first-section',
        `${(nav.dataset.opacity === 'opaque') ? window.innerHeight - nav.clientHeight : window.innerHeight}px`);
      document.documentElement.style.setProperty('--viewport-height',
        (nav.dataset.opacity.indexOf('opaque') > -1 && nav.dataset.positioning === "sticky") ? `calc(100vh - ${nav.clientHeight}px)` : "100vh");
    }
    theme.calc100vh();
  </script>

  <script src="{{ 'vendor.min.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>

  {% render 'body-end-tag' %}


  <script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll("form[action='/contact']").forEach(function (form) {
      form.setAttribute('action', ''); // or use '#'
    });
  });
</script>

</body>
</html>
